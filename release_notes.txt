Video Streamer v1.0
===================

The QML Video Streamer example application showcases the QML video streaming 
and playing capabilities, and Qt Mobility bindings to Multimedia package and
the QML Video element. The QML Video Streamer application has been designed
to use the official Qt Quick Components for navigation and UI look'n'feel.

The customized QML Video player has been componentized so, that any 3rd party
developer can take it use it in his/her own QML application. One showcase of
this approach is the QML Media Browser example application.

The QML Video Streamer also utilises Qt Quick Components in numerous places.
For example, when navigating deeper into the application the PageStack is used.
The StatusBar and ToolBar (with all the ToolButtons etc.) are used as well.

This example application is hosted in Nokia Developer Projects:
- https://projects.developer.nokia.com/QMLVideoStreamer

This example application demonstrates:
- Using QML Video playing capabilities
- Handling volume keys of a Symbian phone within QML code

For more information on implementation, visit the wiki page:
- https://projects.developer.nokia.com/QMLVideoStreamer/wiki


What's new
----------

First public release with all the current functionality.


1. Usage
-------------------------------------------------------------------------------

The customized QML VideoPlayer component can be taken into use in 3rd party
applications simply by adding the VideoPlayer QML sources into the project, and
by importing it into some QML file. The player itself can be created simply by
instantiating the VideoPlayView and by calling its setVideoData() function.


2. Prerequisites
-------------------------------------------------------------------------------

 - Qt basics
 - Qt Quick basics
 - Qt Quick Components basics


3. Project structure and implementation
-------------------------------------------------------------------------------

3.1 Folders
-----------

 |                   The root folder contains the license information and
 |                   this file (release notes).
 |
 |- design           Contains UX design files.
 |
 |- screenshots      Contains screenshots taken from the application.
 |
 |- meego            MeeGo platform specific code files.
 |  |
 |  |- code          Root folder for project, gfx, QML and Javascript files.
 |  |
 |  |- qtc_packaging Contains the Harmattan (Debian) packaging files.
 |
 |- symbian          Symbian (Anna/Belle) platform specific code files.
 |  |
 |  |- code          Root folder for project, gfx, QML and Javascript files.
 |


3.2 Important files and classes
-------------------------------

| Class                   | Description                                       |
|-------------------------|---------------------------------------------------|
| LoadHelper              | Helper class, that is used to load the main QML   |
|                         | file right after showing the splash screen.       |
|-------------------------|---------------------------------------------------|
| PlayerLauncher          | Helper class, that can be used to launch the      |
|                         | platform player for streaming.                    |
|-------------------------|---------------------------------------------------|
| VolumeKeys              | Class, that implements the MRemConCoreApiTarget-  |
|                         | Observer, for reacting to hardware volume buttons.|
|-------------------------|---------------------------------------------------|


3.3 Used APIs/QML elements/Qt Quick Components
----------------------------------------------

Qt:
- QDir
- QScopedPointer
- QString
- QTimer

Standard QML elements used:
- Connections
- ListView
- Loader
- Text
- TextField
- Timer
- XmlListModel
- XmlRole

- Behavior
- ParallelAnimation
- SequentialAnimation
- State
- Transition

QML elements from Qt Quick Components used:
- BusyIndicator
- ListItem
- ProgressBar
- Slider
- ScrollDecorator
- SelectionDialog
- SearchBox (from QQC Extras)

QML elements from Qt Mobility used:
- DeviceInfo
- Video


4. Compatibility
-------------------------------------------------------------------------------

Compatible with:
 - Symbian devices with Qt 4.7.4 or higher.
 - MeeGo 1.2 Harmattan devices.

Tested on:
 - Nokia E6
 - Nokia E7-00
 - Nokia N9

Developed with:
 - Qt SDK 1.2


4.1 Required Capabilities
-------------------------

None; The application can be self signed on Symbian.


4.2 Known Issues and Design Limitations
---------------------------------------

- Video streaming might not start on some device & operator combos. This might
  be due to the used video streaming access point. Changing it can help. Select
  "Menu" - "Settings" - "Application settings" - "Videos" - "Access point in use"
  to change the currently used streaming access point (i.e. in Symbian devices)

After video playback there are severe performance bugs.
- https://bugreports.qt.nokia.com/browse/QTMOBILITY-1570 & -1818

Video play view flickers sometimes and can be seen through.
- https://bugreports.qt.nokia.com/browse/QTMOBILITY-1569

Header item can’t be seen, if navigating with keyboard.
- https://bugreports.qt.nokia.com/browse/QTBUG-20926

Seeking in video is not supported (when using QML Video Player).
- There's support for it in the QML Video element provided 'seekable'-property,
  but unfortunately it does not behave well with streamed content.


5. Building, installing, and running the application
-------------------------------------------------------------------------------

5.1 Preparations
----------------

Check that you have the latest Qt SDK installed in the development environment
and the latest Qt version on the device.

Qt Quick Components 1.1 or higher is required.

5.2 Using the Qt SDK
--------------------

You can install and run the application on the device by using the Qt SDK.
Open the project in the SDK, set up the correct target (depending on the device
platform), and click the Run button. For more details about this approach,
visit the Qt Getting Started section at Nokia Developer
(http://www.developer.nokia.com/Develop/Qt/Getting_started/).

5.3 Symbian device
------------------

Make sure your device is connected to your computer. Locate the .sis
installation file and open it with Ovi Suite. Accept all requests from Ovi
Suite and the device. Note that you can also install the application by copying
the installation file onto your device and opening it with the Symbian File
Manager application.

After the application is installed, locate the application icon from the
application menu and launch the application by tapping the icon.

5.4 Nokia N9 and Nokia N950
---------------------------

Copy the application Debian package onto the device. Locate the file with the
device and run it; this will install the application. Note that you can also
use the terminal application and install the application by typing the command
'dpkg -i <package name>.deb' on the command line. To install the application
using the terminal application, make sure you have the right privileges 
to do so (e.g. root access).

Once the application is installed, locate the application icon from the
application menu and launch the application by tapping the icon.


6. License
-------------------------------------------------------------------------------

See the license text file delivered with this project. The license file is also
available online at
https://projects.developer.nokia.com/QMLVideoStreamer/browser/Licence.txt


7. Related documentation
-------------------------------------------------------------------------------
Qt Quick Components
- http://doc.qt.nokia.com/qt-components-symbian-1.0/index.html
- http://harmattan-dev.nokia.com/docs/library/html/qt-components/qt-components.html


8. Version history
-------------------------------------------------------------------------------

1.0.0 Published on the Nokia Developer website.
0.6.0 Final UI tweaks & fixes.
0.5.0 Added platform player launch, upgraded graphical look 'n feel.
0.4.0 Video playback modulized, new UI look & gfx tuning.
0.3.0 Lots of fixes, feature improvements & UI tweaking.
0.2.0 First release with Harmattan/MeeGo support.
0.1.1 First release with E6 support.
0.0.1 Initial Release.
